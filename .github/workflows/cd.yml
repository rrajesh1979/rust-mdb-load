name: CD
on:
  release:
    types: [created]

jobs:
  release:
    name: Deploy Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@master
      - name: Hub already installed
        run: |
          hub --version
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Run hub commands
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo build --bin rmdbload --release
          if [ "$RUNNER_OS" == "Linux" ]; then
              cd target/release
              asset="rmdbload-$TAG-$host.tar.gz"
              tar czf ../../$asset rmdbload
          elif [ "$RUNNER_OS" == "macOS" ]; then
              cd target/release
              asset="rmdbload-$TAG-$host.tar.gz"
              sudo /usr/sbin/purge
              tar czf ../../$asset rmdbload
          elif [ "$RUNNER_OS" == "Windows" ]; then
              asset="rmdbload-$TAG-$host.zip"
              7z a ../../$asset rmdbload.exe
          hub release edit -m "" --attach $asset $TAG
          

#      - name: Build and deploy artifacts
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ci/make-release.sh ${{ matrix.os }}
#        shell: bash
